{"remainingRequest":"/home/yd/company/demo/vue-cli3/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/yd/company/demo/vue-cli3/src/pc-project/views/manage/index.vue?vue&type=style&index=0&id=46deea20&scoped=true&lang=less&","dependencies":[{"path":"/home/yd/company/demo/vue-cli3/src/pc-project/views/manage/index.vue","mtime":1644831193685},{"path":"/home/yd/company/demo/vue-cli3/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/yd/company/demo/vue-cli3/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/yd/company/demo/vue-cli3/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/yd/company/demo/vue-cli3/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/yd/company/demo/vue-cli3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/yd/company/demo/vue-cli3/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnNsb3QtaXRlbXtwYWRkaW5nOiA1cHg7Y3Vyc29yOiBwb2ludGVyO30KYnV0dG9ue2Rpc3BsYXk6IGlubGluZS1ibG9jazttYXJnaW46NXB4O30K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0LA;AACA","file":"index.vue","sourceRoot":"src/pc-project/views/manage","sourcesContent":["<template>\n    <div class=\"\">\n      <div style=\"width:900px;margin:10px auto;\">\n        <button @click=\"alert1\">alert1</button>\n        <button @click=\"alert2\">alert2</button>\n        <button @click=\"loading\">loading</button>\n        <button @click=\"toast\">toast</button>\n        <button @click=\"confirm1\">confirm1</button>\n        <button @click=\"confirm2\">confirm2</button>\n      </div>\n      <hr/>\n\n      <div style=\"width:900px;margin:10px auto;\">\n        <div style=\"display:inline-block\">\n          城市选择1\n          <SelectCityComponent\n          v-model=\"searchcode1\"\n          @selected=\"selected\"/>\n        </div>   \n        <div style=\"display:inline-block;margin-left:40px;\">\n          城市选择2\n          <SelectCityComponent\n          v-model=\"searchcode2\"\n          @selected=\"selected\"/>\n        </div>\n      </div>\n      <hr/>\n\n      <div style=\"width:900px;margin:10px auto;\">\n        <div style=\"display:inline-block\">\n          城市时间1\n          <FjDatepickerComponent\n            v-model=\"activeMonth1\"\n          />\n        </div>   \n        <div style=\"display:inline-block;margin-left:40px;\">\n          城市时间2\n          <FjDatepickerComponent\n            v-model=\"activeMonth2\"\n            type=\"double\"\n          />\n        </div>\n      </div>\n      <hr/>\n\n      <div style=\"width:900px;margin:10px auto;\">\n        <div style=\"display:inline-block\">\n          自动选择1\n           <FjAutoCompleteComponent \n            selectKey=\"name\"\n            :requestEvent=\"GetSearchTopTip\"\n            v-model=\"autoSearchcode1\"\n            >\n            <template v-slot:aoto=\"slotProps\">\n              <div class=\"slot-item\" @click=\"checkedItem(slotProps)\">{{slotProps.item.name}}</div>\n            </template>\n          </FjAutoCompleteComponent>\n        </div>   \n        <div style=\"display:inline-block;margin-left:40px;\">\n          自动选择2\n          <FjAutoCompleteComponent \n            selectKey=\"name\"\n            :requestEvent=\"GetSearchTopTip\"\n            v-model=\"autoSearchcode2\"\n            >\n            <template v-slot:aoto=\"slotProps\">\n              <div class=\"slot-item\" @click=\"checkedItem(slotProps)\">{{slotProps.item.name}}</div>\n            </template>\n          </FjAutoCompleteComponent>\n        </div>\n      </div>\n      <hr/>\n\n\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Vue } from 'vue-property-decorator';\nimport SelectCityComponent from '@/pc-project/components/select-city.vue';\nimport FjDatepickerComponent from '@/pc-project/components/fj-datepicker/fj-datepicker.vue';\nimport FjAutoCompleteComponent from '@/pc-project/components/aoto-query/fj-auto-complete.vue';\nimport {service} from '@/pc-project/services/interfaces'\nimport axios from 'axios'\nimport {\n  Module,\n  VuexModule,\n  Mutation,\n  Action,\n  getModule,\n} from 'vuex-module-decorators';\n\n\n@Component({\n  components: { SelectCityComponent, FjDatepickerComponent, FjAutoCompleteComponent }\n})\nexport default class IndexPage extends Vue {\n  private searchcode1 = '';\n  private searchcode2 = '';\n\n  private activeMonth1 = '2020-08-17';\n  private activeMonth2 = '2020/08/19~2020/08/22';\n  private startEnabled = '2020/07/17';\n  private endEnabled = '2020-09-22';\n\n  private autoSearchcode1= '';\n  private autoSearchcode2 = '';\n\n  selected(cityitem: any) {\n    console.log(cityitem);\n  }\n\n  checkedItem(aotoItem: any) { console.log(aotoItem) }\n\n  GetSearchTopTip(value: string, callback: Function) {\n    let params: any = {}\n    if(value) { params = {\"name\": value}; } \n      service.request({\n          url: `/user`,\n          data: params,\n          notLoading: true\n      }).then((res) => {\n          if(callback) { callback(res); }\n      })\n  }\n\n  alert1() {\n    this.$layer.alert('我是alert!');\n  }\n\n  alert2() {\n    this.$layer.alert({\n      title: 'alerttitle',\n      text: 'alerttext',\n      btnMessage: 'string',\n      finallyCallback: (num: number | string) => { // num: 0 close  1 btn\n       console.log(num);\n      },\n      btnCallback: () => {\n        console.log('btnCallback');\n        return false; // 阻止弹出框关闭;\n      },\n      closeCallback: () => { },\n    });\n  }\n\n  loading() {\n    // this.$layer.loading();\n    const loading = this.$layer.loading('3秒后关闭哦...');\n    setTimeout(() => {\n      this.$layer.hide(loading);\n    },3000);\n  }\n\n  toast() {\n    // this.$layer.toast('我是toast!'); // 默认2秒关闭\n    this.$layer.toast({\n        message: '校验错误!',\n        time: 5000\n    });\n  }\n\n  confirm1() {\n    this.$layer.confirm('确认关闭？');\n  }\n\n  confirm2() {\n    this.$layer.confirm({\n      title: 'alerttitle',\n      text: 'alerttext',\n      btnMessage: 'string',\n      finallyCallback: (num: number | string) => { // num: 0 close  1 btn\n       console.log(num);\n      },\n      btnCallback: () => {\n        console.log('btnCallback');\n        return false; // 阻止弹出框关闭;\n      },\n      closeCallback: () => { },\n    });\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"less\">\n.slot-item{padding: 5px;cursor: pointer;}\nbutton{display: inline-block;margin:5px;}\n</style>\n"]}]}