{"remainingRequest":"/home/yd/company/demo/vue-cli3/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/yd/company/demo/vue-cli3/src/pc-project/components/aoto-query/fj-auto-complete.vue?vue&type=style&index=0&id=1fea36b2&scoped=true&lang=less&","dependencies":[{"path":"/home/yd/company/demo/vue-cli3/src/pc-project/components/aoto-query/fj-auto-complete.vue","mtime":1644831193685},{"path":"/home/yd/company/demo/vue-cli3/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/yd/company/demo/vue-cli3/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/yd/company/demo/vue-cli3/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/yd/company/demo/vue-cli3/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/yd/company/demo/vue-cli3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/yd/company/demo/vue-cli3/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouYW90by1xdWVyeXtwb3NpdGlvbjphYnNvbHV0ZTtiYWNrZ3JvdW5kOiAjZmZmO2JveC1zaGFkb3c6IDBweCA1cHggMzhweCAjY2NjO30K"},{"version":3,"sources":["fj-auto-complete.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+FA","file":"fj-auto-complete.vue","sourceRoot":"src/pc-project/components/aoto-query","sourcesContent":["<template>\n    <div>\n        <input type=\"text\" :value=\"searchCode\" @input=\"inputHandle($event)\" @click=\"clickHandle($event)\" />\n        <div class=\"aoto-query\" :style=\"listStyle\" v-if=\"boxShow\" @click=\"boxEvent\">\n            <div v-if=\"!AllData.length && !aotoemptyisShow\">加载中。。。</div>\n            <div v-if=\"searchCode!==''&&aotoemptyisShow\">暂无更多数据</div>\n            <template v-if=\"AllData.length\">\n            <div v-for=\"(aotoitem, index) of AllData\" :key=\"index\" @click=\"selectName(aotoitem)\">\n                <slot name=\"aoto\" :item=\"aotoitem\"></slot>\n            </div>\n            </template>\n        </div>\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Vue, Prop, Emit, Model } from 'vue-property-decorator';\nimport { getPos, stopPropagation, debounce } from '@/utils';\nimport {service} from '@/pc-project/services/interfaces';\n\n/**\n * <slot>上的自定义属性，可以在父组件上使用 <template v-slot:aoto=\"slotProps\">{{slotProps.item}}</template> 获取\n * @init(event: any, modelName: any)  父组件要调用此方法，穿如event以及v-model的属性名成\n * @listStyle控制当前组件的位置\n * @selectKey 选中的项的字段名称\n * @requestEvent 父传过来的请求数据方法 Function\n */\n\n@Component\nexport default class FjAutoCompleteComponent extends Vue {\n    @Model('change', { type: String }) readonly searchCode!: string;\n    @Prop() private requestEvent!: Function;\n    @Prop({ default: 'Name', type: String }) private selectKey!: string;\n    \n    private listStyle: any = { 'pointer-events': 'auto' };\n    private boxShow = false;\n    private AllData: any[] = [];\n    private aotoemptyisShow = false;\n\n    @Emit('change') private changeEmit(event: any) {}\n\n    private selectName(item: any) { \n        this.changeEmit(item[this.selectKey]);\n        this.boxShow = false;\n    }\n       \n    created() {\n        document.addEventListener(\"click\", () => { this.boxShow = false;});\n    }\n\n    getthis() { return this; }\n    inputHandle = debounce((event: any, model:any) => {\n        const that = this.getthis(); // 由于使用 fn = () => {} 会导致this失效，先使用此方法代替this，后面优化\n        that.init(event);\n        that.AllData = [];\n        that.aotoemptyisShow = false;\n        this.changeEmit(event.target.value);\n    },1000)\n\n    clickHandle(event: any) {\n        this.init(event);\n        this.boxShow = false;\n        setTimeout(()=>{\n            stopPropagation(event);\n            this.boxShow = true;\n        },100)\n    }\n\n    init(event: any) {\n        const dom = event.target;\n        const _getPos = getPos(dom);\n        this.listStyle = {\n        ...this.listStyle,\n        'width': `${_getPos.width}px`,\n        'left': `${_getPos.left}px`,\n        'top': `${_getPos.top+_getPos.height}px`,\n        }\n        this.boxShow = true;\n        if(this.requestEvent){\n            this.requestEvent(event.target.value, (res: any) => {\n                this.AllData = res;\n                if(this.AllData.length === 0){\n                    this.aotoemptyisShow = true;\n                }\n            });\n        }\n        \n    }\n    boxEvent(event: any) {\n        stopPropagation(event);\n    }\n}\n</script>\n\n<style scoped lang=\"less\">\n.aoto-query{position:absolute;background: #fff;box-shadow: 0px 5px 38px #ccc;}\n</style>\n\n"]}]}